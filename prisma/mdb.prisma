//
// MongoDB Database Schema for Prisma
// ...
//

generator client {
    provider        = "prisma-client-js"
    previewFeatures = []
    binaryTargets   = ["native"]
}

datasource db {
    provider = "mongodb"
    url      = env("MONGODB_CONNECTION_STRING")
}

enum Role {
    USER
    ADMIN
    MODERATOR
}

model Account {
    id                 String  @id @default(auto()) @map("_id") @db.ObjectId
    userId             String
    type               String
    provider           String
    providerAccountId  String
    refresh_token      String?
    access_token       String?
    expires_at         Int?
    token_type         String?
    scope              String?
    id_token           String?
    session_state      String?
    oauth_token_secret String?
    oauth_token        String?
    user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String     @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String?    @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    role          Role       @default(USER)
}

model VerificationToken {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

//
// END
//
